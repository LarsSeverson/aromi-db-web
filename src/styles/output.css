/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-lg: 32rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-light: 300;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-3xl: 1.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-background: #ffffff;
    --color-background2: #f6f6f6;
    --color-surface: #f2f2f2;
    --color-surface2: #e5e5e5;
    --color-surface3: #d9d9d9;
    --color-surface4: #cccccc;
    --color-dark: #000000;
    --color-dark2: #1a1a1a;
    --color-dark3: #2c2c2c;
    --color-dark4: #404040;
    --color-primary: #C6471D;
    --font-inter: "Inter", sans-serif;
    --font-jp: "Noto Sans JP", sans-serif;
    --text-md: 0.92rem;
    --shadow-symmetrical: 0 0 10px rgba(0, 0, 0, 0.15);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-12 {
    top: calc(var(--spacing) * 12);
  }
  .top-auto {
    top: auto;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-2 {
    bottom: calc(var(--spacing) * 2);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-auto {
    left: auto;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .z-\[calc\(1000-var\(--toast-index\)\)\] {
    z-index: calc(1000 - var(--toast-index));
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-start-2 {
    grid-column-start: 2;
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-1\.5 {
    margin-block: calc(var(--spacing) * 1.5);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .-mt-8 {
    margin-top: calc(var(--spacing) * -8);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mr-0 {
    margin-right: calc(var(--spacing) * 0);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-8 {
    margin-right: calc(var(--spacing) * 8);
  }
  .mr-auto {
    margin-right: auto;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-\[0\.3px\] {
    margin-left: 0.3px;
  }
  .ml-auto {
    margin-left: auto;
  }
  .box-border {
    box-sizing: border-box;
  }
  .box-content {
    box-sizing: content-box;
  }
  .scrollbar-thin {
    &::-webkit-scrollbar-track {
      background-color: var(--scrollbar-track);
      border-radius: var(--scrollbar-track-radius);
    }
    &::-webkit-scrollbar-thumb {
      background-color: var(--scrollbar-thumb);
      border-radius: var(--scrollbar-thumb-radius);
    }
    &::-webkit-scrollbar-corner {
      background-color: var(--scrollbar-corner);
      border-radius: var(--scrollbar-corner-radius);
    }
    @supports (-moz-appearance:none) {
      scrollbar-width: thin;
      scrollbar-color: var(--scrollbar-thumb, initial) var(--scrollbar-track, initial);
    }
    &::-webkit-scrollbar {
      display: block;
      width: 8px;
      height: 8px;
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .aspect-\[4\/5\] {
    aspect-ratio: 4/5;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-\[5\.5px\] {
    height: 5.5px;
  }
  .h-\[33px\] {
    height: 33px;
  }
  .h-\[calc\(100vh-3rem\)\] {
    height: calc(100vh - 3rem);
  }
  .h-\[var\(--accordion-panel-height\)\] {
    height: var(--accordion-panel-height);
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .max-h-\[var\(--available-height\)\] {
    max-height: var(--available-height);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-\[1px\] {
    width: 1px;
  }
  .w-\[20ch\] {
    width: 20ch;
  }
  .w-\[50px\] {
    width: 50px;
  }
  .w-\[60px\] {
    width: 60px;
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-full {
    width: 100%;
  }
  .w-min {
    width: min-content;
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-60 {
    max-width: calc(var(--spacing) * 60);
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .max-w-96 {
    max-width: calc(var(--spacing) * 96);
  }
  .max-w-\[calc\(100vw-3rem\)\] {
    max-width: calc(100vw - 3rem);
  }
  .max-w-\[calc\(100vw-8rem\)\] {
    max-width: calc(100vw - 8rem);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-36 {
    min-width: calc(var(--spacing) * 36);
  }
  .min-w-52 {
    min-width: calc(var(--spacing) * 52);
  }
  .min-w-64 {
    min-width: calc(var(--spacing) * 64);
  }
  .min-w-96 {
    min-width: calc(var(--spacing) * 96);
  }
  .min-w-\[50px\] {
    min-width: 50px;
  }
  .min-w-\[var\(--anchor-width\)\] {
    min-width: var(--anchor-width);
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .origin-\[var\(--transform-origin\)\] {
    transform-origin: var(--transform-origin);
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-\[0\.95\] {
    scale: 0.95;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .list-none {
    list-style-type: none;
  }
  .grid-cols-\[0\.75rem_1fr\] {
    grid-template-columns: 0.75rem 1fr;
  }
  .grid-cols-\[repeat\(auto-fit\,minmax\(60px\,128px\)\)\] {
    grid-template-columns: repeat(auto-fit,minmax(60px,128px));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .self-center {
    align-self: center;
  }
  .self-start {
    align-self: flex-start;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-tl-none {
    border-top-left-radius: 0;
  }
  .rounded-tr-none {
    border-top-right-radius: 0;
  }
  .rounded-br-none {
    border-bottom-right-radius: 0;
  }
  .rounded-bl-none {
    border-bottom-left-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-surface {
    border-color: var(--color-surface);
  }
  .border-surface2 {
    border-color: var(--color-surface2);
  }
  .border-surface3 {
    border-color: var(--color-surface3);
  }
  .border-surface4 {
    border-color: var(--color-surface4);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-\[canvas\] {
    background-color: canvas;
  }
  .bg-background {
    background-color: var(--color-background);
  }
  .bg-background2 {
    background-color: var(--color-background2);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-dark {
    background-color: var(--color-dark);
  }
  .bg-dark4\/50 {
    background-color: color-mix(in srgb, #404040 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-dark4) 50%, transparent);
    }
  }
  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }
  .bg-inherit {
    background-color: inherit;
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-red-800 {
    background-color: var(--color-red-800);
  }
  .bg-surface {
    background-color: var(--color-surface);
  }
  .bg-surface2 {
    background-color: var(--color-surface2);
  }
  .bg-surface2\/30 {
    background-color: color-mix(in srgb, #e5e5e5 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-surface2) 30%, transparent);
    }
  }
  .bg-surface2\/40 {
    background-color: color-mix(in srgb, #e5e5e5 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-surface2) 40%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-surface2 {
    --tw-gradient-from: var(--color-surface2);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-35\% {
    --tw-gradient-from-position: 35%;
  }
  .to-background {
    --tw-gradient-to: var(--color-background);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-65\% {
    --tw-gradient-to-position: 65%;
  }
  .bg-\[length\:6\.5rem_100\%\] {
    background-size: 6.5rem 100%;
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .bg-\[100\%_0\%\] {
    background-position: 100% 0%;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .fill-\[canvas\] {
    fill: canvas;
  }
  .fill-gray-200 {
    fill: var(--color-gray-200);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-\[0\.5px\] {
    padding: 0.5px;
  }
  .p-\[1px\] {
    padding: 1px;
  }
  .p-\[5\.5px\] {
    padding: 5.5px;
  }
  .p-px {
    padding: 1px;
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[1px\] {
    padding-block: 1px;
  }
  .py-\[3\.5px\] {
    padding-block: 3.5px;
  }
  .py-\[4\.5px\] {
    padding-block: 4.5px;
  }
  .py-\[5\.5px\] {
    padding-block: 5.5px;
  }
  .py-\[6\.5px\] {
    padding-block: 6.5px;
  }
  .py-\[6\.\] {
    padding-block: 6.;
  }
  .pe-\[43px\] {
    padding-inline-end: 43px;
  }
  .pr-1 {
    padding-right: calc(var(--spacing) * 1);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pl-2\.5 {
    padding-left: calc(var(--spacing) * 2.5);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-\[0\.875rem\] {
    padding-left: 0.875rem;
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-jp {
    font-family: var(--font-jp);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[0\.925rem\] {
    font-size: 0.925rem;
  }
  .text-\[0\.975rem\] {
    font-size: 0.975rem;
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .text-md {
    font-size: var(--text-md);
  }
  .text-md {
    font-size: var(--text-md);
  }
  .leading-4 {
    --tw-leading: calc(var(--spacing) * 4);
    line-height: calc(var(--spacing) * 4);
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-normal {
    --tw-tracking: var(--tracking-normal);
    letter-spacing: var(--tracking-normal);
  }
  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-dark\/60 {
    color: color-mix(in srgb, #000000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-dark) 60%, transparent);
    }
  }
  .text-dark\/80 {
    color: color-mix(in srgb, #000000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-dark) 80%, transparent);
    }
  }
  .text-dark3 {
    color: var(--color-dark3);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-gray-200 {
    --tw-shadow-color: oklch(92.8% 0.006 264.531);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-gray-200) var(--tw-shadow-alpha), transparent);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-0 {
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .outline-offset-\[-3px\] {
    outline-offset: -3px;
  }
  .outline-gray-200 {
    outline-color: var(--color-gray-200);
  }
  .outline-primary {
    outline-color: var(--color-primary);
  }
  .outline-red-600 {
    outline-color: var(--color-red-600);
  }
  .outline-surface2 {
    outline-color: var(--color-surface2);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background-color\] {
    transition-property: background-color;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[background-position\,box-shadow\] {
    transition-property: background-position,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[height\] {
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,opacity\] {
    transition-property: transform,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[transform\,scale\,opacity\] {
    transition-property: transform,scale,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[width\,colors\] {
    transition-property: width,colors;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-\[125ms\] {
    --tw-duration: 125ms;
    transition-duration: 125ms;
  }
  .ease-\[cubic-bezier\(0\.22\,1\,0\.36\,1\)\] {
    --tw-ease: cubic-bezier(0.22,1,0.36,1);
    transition-timing-function: cubic-bezier(0.22,1,0.36,1);
  }
  .ease-\[cubic-bezier\(0\.26\,0\.75\,0\.38\,0\.45\)\] {
    --tw-ease: cubic-bezier(0.26,0.75,0.38,0.45);
    transition-timing-function: cubic-bezier(0.26,0.75,0.38,0.45);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .scrollbar-thumb-surface {
    --scrollbar-thumb: #f2f2f2;
  }
  .scrollbar-track-transparent {
    --scrollbar-track: transparent;
  }
  .group-hover\:inline {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: inline;
      }
    }
  }
  .group-hover\:border-primary {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
  }
  .group-hover\:bg-background {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-background);
      }
    }
  }
  .group-hover\:bg-dark {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-dark);
      }
    }
  }
  .group-hover\:bg-dark\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000000 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-dark2\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #1a1a1a 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark2) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-dark3\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #2c2c2c 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark3) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-dark4\/10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #404040 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark4) 10%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-surface {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-surface);
      }
    }
  }
  .group-hover\:bg-surface2 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-surface2);
      }
    }
  }
  .group-hover\:underline {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .group-hover\:outline-primary {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        outline-color: var(--color-primary);
      }
    }
  }
  .group-focus\:inline {
    &:is(:where(.group):focus *) {
      display: inline;
    }
  }
  .group-data-\[panel-open\]\:scale-110 {
    &:is(:where(.group)[data-panel-open] *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .group-data-\[panel-open\]\:rotate-45 {
    &:is(:where(.group)[data-panel-open] *) {
      rotate: 45deg;
    }
  }
  .group-data-\[panel-open\]\:rotate-90 {
    &:is(:where(.group)[data-panel-open] *) {
      rotate: 90deg;
    }
  }
  .group-data-\[panel-open\]\:overflow-visible {
    &:is(:where(.group)[data-panel-open] *) {
      overflow: visible;
    }
  }
  .group-data-\[side\=none\]\:min-w-\[calc\(var\(--anchor-width\)\+1rem\)\] {
    &:is(:where(.group)[data-side="none"] *) {
      min-width: calc(var(--anchor-width) + 1rem);
    }
  }
  .group-data-\[side\=none\]\:pr-12 {
    &:is(:where(.group)[data-side="none"] *) {
      padding-right: calc(var(--spacing) * 12);
    }
  }
  .group-data-\[side\=none\]\:text-base {
    &:is(:where(.group)[data-side="none"] *) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .group-data-\[side\=none\]\:leading-4 {
    &:is(:where(.group)[data-side="none"] *) {
      --tw-leading: calc(var(--spacing) * 4);
      line-height: calc(var(--spacing) * 4);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-\[-100\%\] {
    &::before {
      content: var(--tw-content);
      top: -100%;
    }
  }
  .before\:left-0 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .before\:h-full {
    &::before {
      content: var(--tw-content);
      height: 100%;
    }
  }
  .before\:w-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:outline-offset-2 {
    &::before {
      content: var(--tw-content);
      outline-offset: 2px;
    }
  }
  .before\:content-\[\'\'\] {
    &::before {
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .hover\:border-surface4 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-surface4);
      }
    }
  }
  .hover\:bg-background2 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-background2);
      }
    }
  }
  .hover\:bg-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-dark);
      }
    }
  }
  .hover\:bg-dark\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000000 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-dark\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000000 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-dark) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-surface {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-surface);
      }
    }
  }
  .hover\:bg-surface2 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-surface2);
      }
    }
  }
  .hover\:bg-surface2\/60 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #e5e5e5 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-surface2) 60%, transparent);
        }
      }
    }
  }
  .hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:outline {
    &:hover {
      @media (hover: hover) {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
      }
    }
  }
  .hover\:outline-1 {
    &:hover {
      @media (hover: hover) {
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
      }
    }
  }
  .hover\:outline-surface2 {
    &:hover {
      @media (hover: hover) {
        outline-color: var(--color-surface2);
      }
    }
  }
  .hover\:scrollbar-thumb-surface3 {
    &:hover {
      @media (hover: hover) {
        --scrollbar-thumb: #d9d9d9;
      }
    }
  }
  .focus\:z-\[1\] {
    &:focus {
      z-index: 1;
    }
  }
  .focus-visible\:z-1 {
    &:focus-visible {
      z-index: 1;
    }
  }
  .focus-visible\:outline {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:-outline-offset-1 {
    &:focus-visible {
      outline-offset: calc(1px * -1);
    }
  }
  .focus-visible\:before\:inset-0 {
    &:focus-visible {
      &::before {
        content: var(--tw-content);
        inset: calc(var(--spacing) * 0);
      }
    }
  }
  .focus-visible\:before\:outline {
    &:focus-visible {
      &::before {
        content: var(--tw-content);
        outline-style: var(--tw-outline-style);
        outline-width: 1px;
      }
    }
  }
  .focus-visible\:before\:outline-2 {
    &:focus-visible {
      &::before {
        content: var(--tw-content);
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
      }
    }
  }
  .active\:bg-background {
    &:active {
      background-color: var(--color-background);
    }
  }
  .active\:bg-surface2 {
    &:active {
      background-color: var(--color-surface2);
    }
  }
  .data-\[checked\]\:translate-x-4 {
    &[data-checked] {
      --tw-translate-x: calc(var(--spacing) * 4);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[checked\]\:bg-\[0\%_0\%\] {
    &[data-checked] {
      background-position: 0% 0%;
    }
  }
  .data-\[checked\]\:active\:bg-surface2 {
    &[data-checked] {
      &:active {
        background-color: var(--color-surface2);
      }
    }
  }
  .data-\[direction\=down\]\:bottom-0 {
    &[data-direction="down"] {
      bottom: calc(var(--spacing) * 0);
    }
  }
  .data-\[direction\=down\]\:before\:bottom-\[-100\%\] {
    &[data-direction="down"] {
      &::before {
        content: var(--tw-content);
        bottom: -100%;
      }
    }
  }
  .data-\[ending-style\]\:h-0 {
    &[data-ending-style] {
      height: calc(var(--spacing) * 0);
    }
  }
  .data-\[ending-style\]\:translate-y-\[150\%\] {
    &[data-ending-style] {
      --tw-translate-y: 150%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[ending-style\]\:scale-90 {
    &[data-ending-style] {
      --tw-scale-x: 90%;
      --tw-scale-y: 90%;
      --tw-scale-z: 90%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-\[ending-style\]\:opacity-0 {
    &[data-ending-style] {
      opacity: 0%;
    }
  }
  .data-\[expanded\]\:translate-x-\[var\(--toast-swipe-movement-x\)\] {
    &[data-expanded] {
      --tw-translate-x: var(--toast-swipe-movement-x);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[expanded\]\:translate-y-\[calc\(var\(--toast-offset-y\)\*-1\+var\(--toast-index\)\*-0\.75rem\+var\(--toast-swipe-movement-y\)\)\] {
    &[data-expanded] {
      --tw-translate-y: calc(var(--toast-offset-y) * -1 + var(--toast-index) * -0.75rem + var(--toast-swipe-movement-y));
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[highlighted\]\:relative {
    &[data-highlighted] {
      position: relative;
    }
  }
  .data-\[highlighted\]\:z-0 {
    &[data-highlighted] {
      z-index: 0;
    }
  }
  .data-\[highlighted\]\:before\:absolute {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        position: absolute;
      }
    }
  }
  .data-\[highlighted\]\:before\:inset-x-1 {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        inset-inline: calc(var(--spacing) * 1);
      }
    }
  }
  .data-\[highlighted\]\:before\:inset-y-0 {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        inset-block: calc(var(--spacing) * 0);
      }
    }
  }
  .data-\[highlighted\]\:before\:z-\[-1\] {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        z-index: -1;
      }
    }
  }
  .data-\[highlighted\]\:before\:rounded {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        border-radius: 0.25rem;
      }
    }
  }
  .data-\[highlighted\]\:before\:rounded-sm {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        border-radius: var(--radius-sm);
      }
    }
  }
  .data-\[highlighted\]\:before\:bg-surface2 {
    &[data-highlighted] {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-surface2);
      }
    }
  }
  .data-\[highlighted\]\:before\:content-\[\"\"\] {
    &[data-highlighted] {
      &::before {
        --tw-content: "";
        content: var(--tw-content);
      }
    }
  }
  .data-\[limited\]\:opacity-0 {
    &[data-limited] {
      opacity: 0%;
    }
  }
  .data-\[panel-open\]\:overflow-visible {
    &[data-panel-open] {
      overflow: visible;
    }
  }
  .data-\[panel-open\]\:data-\[ending-style\]\:overflow-visible {
    &[data-panel-open] {
      &[data-ending-style] {
        overflow: visible;
      }
    }
  }
  .data-\[side\=bottom\]\:top-\[-8px\] {
    &[data-side="bottom"] {
      top: -8px;
    }
  }
  .data-\[side\=left\]\:right-\[-13px\] {
    &[data-side="left"] {
      right: -13px;
    }
  }
  .data-\[side\=left\]\:rotate-90 {
    &[data-side="left"] {
      rotate: 90deg;
    }
  }
  .data-\[side\=none\]\:data-\[ending-style\]\:transition-none {
    &[data-side="none"] {
      &[data-ending-style] {
        transition-property: none;
      }
    }
  }
  .data-\[side\=right\]\:left-\[-13px\] {
    &[data-side="right"] {
      left: -13px;
    }
  }
  .data-\[side\=right\]\:-rotate-90 {
    &[data-side="right"] {
      rotate: calc(90deg * -1);
    }
  }
  .data-\[side\=top\]\:bottom-\[-8px\] {
    &[data-side="top"] {
      bottom: -8px;
    }
  }
  .data-\[side\=top\]\:rotate-180 {
    &[data-side="top"] {
      rotate: 180deg;
    }
  }
  .data-\[starting-style\]\:h-0 {
    &[data-starting-style] {
      height: calc(var(--spacing) * 0);
    }
  }
  .data-\[starting-style\]\:translate-y-\[150\%\] {
    &[data-starting-style] {
      --tw-translate-y: 150%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[starting-style\]\:scale-90 {
    &[data-starting-style] {
      --tw-scale-x: 90%;
      --tw-scale-y: 90%;
      --tw-scale-z: 90%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .data-\[starting-style\]\:opacity-0 {
    &[data-starting-style] {
      opacity: 0%;
    }
  }
  .data-\[side\=none\]\:data-\[starting-style\]\:opacity-100 {
    &[data-side="none"] {
      &[data-starting-style] {
        opacity: 100%;
      }
    }
  }
  .data-\[side\=none\]\:data-\[starting-style\]\:transition-none {
    &[data-side="none"] {
      &[data-starting-style] {
        transition-property: none;
      }
    }
  }
  .max-md\:w-\[60px\] {
    @media (width < 48rem) {
      width: 60px;
    }
  }
  .sm\:right-8 {
    @media (width >= 40rem) {
      right: calc(var(--spacing) * 8);
    }
  }
  .sm\:bottom-8 {
    @media (width >= 40rem) {
      bottom: calc(var(--spacing) * 8);
    }
  }
  .sm\:w-\[300px\] {
    @media (width >= 40rem) {
      width: 300px;
    }
  }
  .dark\:fill-gray-300 {
    @media (prefers-color-scheme: dark) {
      fill: var(--color-gray-300);
    }
  }
  .dark\:fill-none {
    @media (prefers-color-scheme: dark) {
      fill: none;
    }
  }
  .dark\:opacity-70 {
    @media (prefers-color-scheme: dark) {
      opacity: 70%;
    }
  }
  .dark\:shadow-none {
    @media (prefers-color-scheme: dark) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:-outline-offset-1 {
    @media (prefers-color-scheme: dark) {
      outline-offset: calc(1px * -1);
    }
  }
  .dark\:outline-gray-300 {
    @media (prefers-color-scheme: dark) {
      outline-color: var(--color-gray-300);
    }
  }
  .pointer-coarse\:py-2\.5 {
    @media (pointer: coarse) {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  .pointer-coarse\:text-\[0\.925rem\] {
    @media (pointer: coarse) {
      font-size: 0.925rem;
    }
  }
  .\[\&\[data-disabled\]\]\:hover\:bg-background {
    &[data-disabled] {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-background);
        }
      }
    }
  }
  .\[\&\[data-disabled\]\]\:hover\:bg-surface2\/40 {
    &[data-disabled] {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #e5e5e5 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-surface2) 40%, transparent);
          }
        }
      }
    }
  }
}
@layer utilities {
  .shadow-sym {
    box-shadow: var(--shadow-symmetrical);
  }
}
html, body {
  background-color: var(--color-background);
}
#root {
  isolation: isolate;
}
* {
  border-color: var(--color-surface2);
  font-family: var(--font-inter);
}
input {
  background-color: inherit;
}
*:focus-visible {
  outline-style: var(--tw-outline-style);
  outline-width: 2px;
  outline-offset: -1px;
  outline-color: var(--color-primary);
}
@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
@layer base {
  * {
    @supports (-moz-appearance:none) {
      scrollbar-color: initial;
      scrollbar-width: initial;
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-content: "";
    }
  }
}
